// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NavigableSpaceProto.proto

package com.navatar.protobufs;

public final class NavigableSpaceProto {
  private NavigableSpaceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface NavigableSpaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.navatar.protobufs.NavigableSpace)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    java.util.List<com.navatar.protobufs.CoordinatesProto.Coordinates> 
        getOuterBoundaryList();
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    com.navatar.protobufs.CoordinatesProto.Coordinates getOuterBoundary(int index);
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    int getOuterBoundaryCount();

    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    java.util.List<com.navatar.protobufs.NavigableSpaceProto.Ring> 
        getRingsList();
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    com.navatar.protobufs.NavigableSpaceProto.Ring getRings(int index);
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    int getRingsCount();
  }
  /**
   * <pre>
   **
   * The protobuf that defines the NavigableSpace class.
   * </pre>
   *
   * Protobuf type {@code com.navatar.protobufs.NavigableSpace}
   */
  public  static final class NavigableSpace extends
      com.google.protobuf.GeneratedMessageLite<
          NavigableSpace, NavigableSpace.Builder> implements
      // @@protoc_insertion_point(message_implements:com.navatar.protobufs.NavigableSpace)
      NavigableSpaceOrBuilder {
    private NavigableSpace() {
      outerBoundary_ = emptyProtobufList();
      rings_ = emptyProtobufList();
    }
    public static final int OUTERBOUNDARY_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.navatar.protobufs.CoordinatesProto.Coordinates> outerBoundary_;
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    public java.util.List<com.navatar.protobufs.CoordinatesProto.Coordinates> getOuterBoundaryList() {
      return outerBoundary_;
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    public java.util.List<? extends com.navatar.protobufs.CoordinatesProto.CoordinatesOrBuilder> 
        getOuterBoundaryOrBuilderList() {
      return outerBoundary_;
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    public int getOuterBoundaryCount() {
      return outerBoundary_.size();
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    public com.navatar.protobufs.CoordinatesProto.Coordinates getOuterBoundary(int index) {
      return outerBoundary_.get(index);
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    public com.navatar.protobufs.CoordinatesProto.CoordinatesOrBuilder getOuterBoundaryOrBuilder(
        int index) {
      return outerBoundary_.get(index);
    }
    private void ensureOuterBoundaryIsMutable() {
      if (!outerBoundary_.isModifiable()) {
        outerBoundary_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(outerBoundary_);
       }
    }

    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void setOuterBoundary(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOuterBoundaryIsMutable();
      outerBoundary_.set(index, value);
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void setOuterBoundary(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      ensureOuterBoundaryIsMutable();
      outerBoundary_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void addOuterBoundary(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOuterBoundaryIsMutable();
      outerBoundary_.add(value);
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void addOuterBoundary(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureOuterBoundaryIsMutable();
      outerBoundary_.add(index, value);
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void addOuterBoundary(
        com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      ensureOuterBoundaryIsMutable();
      outerBoundary_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void addOuterBoundary(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      ensureOuterBoundaryIsMutable();
      outerBoundary_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void addAllOuterBoundary(
        java.lang.Iterable<? extends com.navatar.protobufs.CoordinatesProto.Coordinates> values) {
      ensureOuterBoundaryIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, outerBoundary_);
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void clearOuterBoundary() {
      outerBoundary_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The outer polygon that defines the navigable space. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
     */
    private void removeOuterBoundary(int index) {
      ensureOuterBoundaryIsMutable();
      outerBoundary_.remove(index);
    }

    public static final int RINGS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.navatar.protobufs.NavigableSpaceProto.Ring> rings_;
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    public java.util.List<com.navatar.protobufs.NavigableSpaceProto.Ring> getRingsList() {
      return rings_;
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    public java.util.List<? extends com.navatar.protobufs.NavigableSpaceProto.RingOrBuilder> 
        getRingsOrBuilderList() {
      return rings_;
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    public int getRingsCount() {
      return rings_.size();
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    public com.navatar.protobufs.NavigableSpaceProto.Ring getRings(int index) {
      return rings_.get(index);
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    public com.navatar.protobufs.NavigableSpaceProto.RingOrBuilder getRingsOrBuilder(
        int index) {
      return rings_.get(index);
    }
    private void ensureRingsIsMutable() {
      if (!rings_.isModifiable()) {
        rings_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(rings_);
       }
    }

    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void setRings(
        int index, com.navatar.protobufs.NavigableSpaceProto.Ring value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRingsIsMutable();
      rings_.set(index, value);
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void setRings(
        int index, com.navatar.protobufs.NavigableSpaceProto.Ring.Builder builderForValue) {
      ensureRingsIsMutable();
      rings_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void addRings(com.navatar.protobufs.NavigableSpaceProto.Ring value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRingsIsMutable();
      rings_.add(value);
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void addRings(
        int index, com.navatar.protobufs.NavigableSpaceProto.Ring value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureRingsIsMutable();
      rings_.add(index, value);
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void addRings(
        com.navatar.protobufs.NavigableSpaceProto.Ring.Builder builderForValue) {
      ensureRingsIsMutable();
      rings_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void addRings(
        int index, com.navatar.protobufs.NavigableSpaceProto.Ring.Builder builderForValue) {
      ensureRingsIsMutable();
      rings_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void addAllRings(
        java.lang.Iterable<? extends com.navatar.protobufs.NavigableSpaceProto.Ring> values) {
      ensureRingsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, rings_);
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void clearRings() {
      rings_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The inner rings that define the non navigable spaces within the polygon. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
     */
    private void removeRings(int index) {
      ensureRingsIsMutable();
      rings_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < outerBoundary_.size(); i++) {
        output.writeMessage(1, outerBoundary_.get(i));
      }
      for (int i = 0; i < rings_.size(); i++) {
        output.writeMessage(2, rings_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < outerBoundary_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, outerBoundary_.get(i));
      }
      for (int i = 0; i < rings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rings_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.navatar.protobufs.NavigableSpaceProto.NavigableSpace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     * The protobuf that defines the NavigableSpace class.
     * </pre>
     *
     * Protobuf type {@code com.navatar.protobufs.NavigableSpace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.navatar.protobufs.NavigableSpaceProto.NavigableSpace, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.navatar.protobufs.NavigableSpace)
        com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder {
      // Construct using com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public java.util.List<com.navatar.protobufs.CoordinatesProto.Coordinates> getOuterBoundaryList() {
        return java.util.Collections.unmodifiableList(
            instance.getOuterBoundaryList());
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public int getOuterBoundaryCount() {
        return instance.getOuterBoundaryCount();
      }/**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public com.navatar.protobufs.CoordinatesProto.Coordinates getOuterBoundary(int index) {
        return instance.getOuterBoundary(index);
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder setOuterBoundary(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.setOuterBoundary(index, value);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder setOuterBoundary(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.setOuterBoundary(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder addOuterBoundary(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.addOuterBoundary(value);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder addOuterBoundary(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.addOuterBoundary(index, value);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder addOuterBoundary(
          com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.addOuterBoundary(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder addOuterBoundary(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.addOuterBoundary(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder addAllOuterBoundary(
          java.lang.Iterable<? extends com.navatar.protobufs.CoordinatesProto.Coordinates> values) {
        copyOnWrite();
        instance.addAllOuterBoundary(values);
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder clearOuterBoundary() {
        copyOnWrite();
        instance.clearOuterBoundary();
        return this;
      }
      /**
       * <pre>
       * The outer polygon that defines the navigable space. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates outerBoundary = 1;</code>
       */
      public Builder removeOuterBoundary(int index) {
        copyOnWrite();
        instance.removeOuterBoundary(index);
        return this;
      }

      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public java.util.List<com.navatar.protobufs.NavigableSpaceProto.Ring> getRingsList() {
        return java.util.Collections.unmodifiableList(
            instance.getRingsList());
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public int getRingsCount() {
        return instance.getRingsCount();
      }/**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public com.navatar.protobufs.NavigableSpaceProto.Ring getRings(int index) {
        return instance.getRings(index);
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder setRings(
          int index, com.navatar.protobufs.NavigableSpaceProto.Ring value) {
        copyOnWrite();
        instance.setRings(index, value);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder setRings(
          int index, com.navatar.protobufs.NavigableSpaceProto.Ring.Builder builderForValue) {
        copyOnWrite();
        instance.setRings(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder addRings(com.navatar.protobufs.NavigableSpaceProto.Ring value) {
        copyOnWrite();
        instance.addRings(value);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder addRings(
          int index, com.navatar.protobufs.NavigableSpaceProto.Ring value) {
        copyOnWrite();
        instance.addRings(index, value);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder addRings(
          com.navatar.protobufs.NavigableSpaceProto.Ring.Builder builderForValue) {
        copyOnWrite();
        instance.addRings(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder addRings(
          int index, com.navatar.protobufs.NavigableSpaceProto.Ring.Builder builderForValue) {
        copyOnWrite();
        instance.addRings(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder addAllRings(
          java.lang.Iterable<? extends com.navatar.protobufs.NavigableSpaceProto.Ring> values) {
        copyOnWrite();
        instance.addAllRings(values);
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder clearRings() {
        copyOnWrite();
        instance.clearRings();
        return this;
      }
      /**
       * <pre>
       * The inner rings that define the non navigable spaces within the polygon. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Ring rings = 2;</code>
       */
      public Builder removeRings(int index) {
        copyOnWrite();
        instance.removeRings(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.navatar.protobufs.NavigableSpace)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.navatar.protobufs.NavigableSpaceProto.NavigableSpace();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          outerBoundary_.makeImmutable();
          rings_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.navatar.protobufs.NavigableSpaceProto.NavigableSpace other = (com.navatar.protobufs.NavigableSpaceProto.NavigableSpace) arg1;
          outerBoundary_= visitor.visitList(outerBoundary_, other.outerBoundary_);
          rings_= visitor.visitList(rings_, other.rings_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!outerBoundary_.isModifiable()) {
                    outerBoundary_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(outerBoundary_);
                  }
                  outerBoundary_.add(
                      input.readMessage(com.navatar.protobufs.CoordinatesProto.Coordinates.parser(), extensionRegistry));
                  break;
                }
                case 18: {
                  if (!rings_.isModifiable()) {
                    rings_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(rings_);
                  }
                  rings_.add(
                      input.readMessage(com.navatar.protobufs.NavigableSpaceProto.Ring.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.navatar.protobufs.NavigableSpace)
    private static final com.navatar.protobufs.NavigableSpaceProto.NavigableSpace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NavigableSpace();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.navatar.protobufs.NavigableSpaceProto.NavigableSpace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NavigableSpace> PARSER;

    public static com.google.protobuf.Parser<NavigableSpace> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.navatar.protobufs.Ring)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    java.util.List<com.navatar.protobufs.CoordinatesProto.Coordinates> 
        getPolygonList();
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    com.navatar.protobufs.CoordinatesProto.Coordinates getPolygon(int index);
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    int getPolygonCount();
  }
  /**
   * <pre>
   **
   * The protobuf that defines the Ring class.
   * </pre>
   *
   * Protobuf type {@code com.navatar.protobufs.Ring}
   */
  public  static final class Ring extends
      com.google.protobuf.GeneratedMessageLite<
          Ring, Ring.Builder> implements
      // @@protoc_insertion_point(message_implements:com.navatar.protobufs.Ring)
      RingOrBuilder {
    private Ring() {
      polygon_ = emptyProtobufList();
    }
    public static final int POLYGON_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.navatar.protobufs.CoordinatesProto.Coordinates> polygon_;
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    public java.util.List<com.navatar.protobufs.CoordinatesProto.Coordinates> getPolygonList() {
      return polygon_;
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    public java.util.List<? extends com.navatar.protobufs.CoordinatesProto.CoordinatesOrBuilder> 
        getPolygonOrBuilderList() {
      return polygon_;
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    public int getPolygonCount() {
      return polygon_.size();
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    public com.navatar.protobufs.CoordinatesProto.Coordinates getPolygon(int index) {
      return polygon_.get(index);
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    public com.navatar.protobufs.CoordinatesProto.CoordinatesOrBuilder getPolygonOrBuilder(
        int index) {
      return polygon_.get(index);
    }
    private void ensurePolygonIsMutable() {
      if (!polygon_.isModifiable()) {
        polygon_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(polygon_);
       }
    }

    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void setPolygon(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePolygonIsMutable();
      polygon_.set(index, value);
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void setPolygon(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      ensurePolygonIsMutable();
      polygon_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void addPolygon(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePolygonIsMutable();
      polygon_.add(value);
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void addPolygon(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePolygonIsMutable();
      polygon_.add(index, value);
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void addPolygon(
        com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      ensurePolygonIsMutable();
      polygon_.add(builderForValue.build());
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void addPolygon(
        int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      ensurePolygonIsMutable();
      polygon_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void addAllPolygon(
        java.lang.Iterable<? extends com.navatar.protobufs.CoordinatesProto.Coordinates> values) {
      ensurePolygonIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, polygon_);
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void clearPolygon() {
      polygon_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The inner rings of the navigable space which are inaccessible. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
     */
    private void removePolygon(int index) {
      ensurePolygonIsMutable();
      polygon_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < polygon_.size(); i++) {
        output.writeMessage(1, polygon_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < polygon_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, polygon_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.NavigableSpaceProto.Ring parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.navatar.protobufs.NavigableSpaceProto.Ring prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     * The protobuf that defines the Ring class.
     * </pre>
     *
     * Protobuf type {@code com.navatar.protobufs.Ring}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.navatar.protobufs.NavigableSpaceProto.Ring, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.navatar.protobufs.Ring)
        com.navatar.protobufs.NavigableSpaceProto.RingOrBuilder {
      // Construct using com.navatar.protobufs.NavigableSpaceProto.Ring.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public java.util.List<com.navatar.protobufs.CoordinatesProto.Coordinates> getPolygonList() {
        return java.util.Collections.unmodifiableList(
            instance.getPolygonList());
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public int getPolygonCount() {
        return instance.getPolygonCount();
      }/**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public com.navatar.protobufs.CoordinatesProto.Coordinates getPolygon(int index) {
        return instance.getPolygon(index);
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder setPolygon(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.setPolygon(index, value);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder setPolygon(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.setPolygon(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder addPolygon(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.addPolygon(value);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder addPolygon(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.addPolygon(index, value);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder addPolygon(
          com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.addPolygon(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder addPolygon(
          int index, com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.addPolygon(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder addAllPolygon(
          java.lang.Iterable<? extends com.navatar.protobufs.CoordinatesProto.Coordinates> values) {
        copyOnWrite();
        instance.addAllPolygon(values);
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder clearPolygon() {
        copyOnWrite();
        instance.clearPolygon();
        return this;
      }
      /**
       * <pre>
       * The inner rings of the navigable space which are inaccessible. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Coordinates polygon = 1;</code>
       */
      public Builder removePolygon(int index) {
        copyOnWrite();
        instance.removePolygon(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.navatar.protobufs.Ring)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.navatar.protobufs.NavigableSpaceProto.Ring();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          polygon_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.navatar.protobufs.NavigableSpaceProto.Ring other = (com.navatar.protobufs.NavigableSpaceProto.Ring) arg1;
          polygon_= visitor.visitList(polygon_, other.polygon_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!polygon_.isModifiable()) {
                    polygon_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(polygon_);
                  }
                  polygon_.add(
                      input.readMessage(com.navatar.protobufs.CoordinatesProto.Coordinates.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.navatar.protobufs.NavigableSpaceProto.Ring.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.navatar.protobufs.Ring)
    private static final com.navatar.protobufs.NavigableSpaceProto.Ring DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Ring();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.navatar.protobufs.NavigableSpaceProto.Ring getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Ring> PARSER;

    public static com.google.protobuf.Parser<Ring> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
