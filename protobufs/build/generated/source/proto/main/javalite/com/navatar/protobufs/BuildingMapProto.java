// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BuildingMapProto.proto

package com.navatar.protobufs;

public final class BuildingMapProto {
  private BuildingMapProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface BuildingMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.navatar.protobufs.BuildingMap)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    boolean hasMinCoordinates();
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    com.navatar.protobufs.CoordinatesProto.Coordinates getMinCoordinates();

    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    boolean hasMaxCoordinates();
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    com.navatar.protobufs.CoordinatesProto.Coordinates getMaxCoordinates();

    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    java.util.List<com.navatar.protobufs.FloorProto.Floor> 
        getFloorsList();
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    com.navatar.protobufs.FloorProto.Floor getFloors(int index);
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    int getFloorsCount();
  }
  /**
   * <pre>
   **
   * The protobuf definition for the BuildingMap class.
   * </pre>
   *
   * Protobuf type {@code com.navatar.protobufs.BuildingMap}
   */
  public  static final class BuildingMap extends
      com.google.protobuf.GeneratedMessageLite<
          BuildingMap, BuildingMap.Builder> implements
      // @@protoc_insertion_point(message_implements:com.navatar.protobufs.BuildingMap)
      BuildingMapOrBuilder {
    private BuildingMap() {
      name_ = "";
      floors_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int MINCOORDINATES_FIELD_NUMBER = 1;
    private com.navatar.protobufs.CoordinatesProto.Coordinates minCoordinates_;
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    public boolean hasMinCoordinates() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    public com.navatar.protobufs.CoordinatesProto.Coordinates getMinCoordinates() {
      return minCoordinates_ == null ? com.navatar.protobufs.CoordinatesProto.Coordinates.getDefaultInstance() : minCoordinates_;
    }
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    private void setMinCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      minCoordinates_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    private void setMinCoordinates(
        com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      minCoordinates_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    private void mergeMinCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (minCoordinates_ != null &&
          minCoordinates_ != com.navatar.protobufs.CoordinatesProto.Coordinates.getDefaultInstance()) {
        minCoordinates_ =
          com.navatar.protobufs.CoordinatesProto.Coordinates.newBuilder(minCoordinates_).mergeFrom(value).buildPartial();
      } else {
        minCoordinates_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The map's minimum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
     */
    private void clearMinCoordinates() {  minCoordinates_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int MAXCOORDINATES_FIELD_NUMBER = 2;
    private com.navatar.protobufs.CoordinatesProto.Coordinates maxCoordinates_;
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    public boolean hasMaxCoordinates() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    public com.navatar.protobufs.CoordinatesProto.Coordinates getMaxCoordinates() {
      return maxCoordinates_ == null ? com.navatar.protobufs.CoordinatesProto.Coordinates.getDefaultInstance() : maxCoordinates_;
    }
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    private void setMaxCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      maxCoordinates_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    private void setMaxCoordinates(
        com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
      maxCoordinates_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    private void mergeMaxCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
      if (maxCoordinates_ != null &&
          maxCoordinates_ != com.navatar.protobufs.CoordinatesProto.Coordinates.getDefaultInstance()) {
        maxCoordinates_ =
          com.navatar.protobufs.CoordinatesProto.Coordinates.newBuilder(maxCoordinates_).mergeFrom(value).buildPartial();
      } else {
        maxCoordinates_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The map's maximum coordinates. 
     * </pre>
     *
     * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
     */
    private void clearMaxCoordinates() {  maxCoordinates_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.String name_;
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      name_ = value;
    }
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void clearName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     * The building's name. 
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      name_ = value.toStringUtf8();
    }

    public static final int FLOORS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<com.navatar.protobufs.FloorProto.Floor> floors_;
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    public java.util.List<com.navatar.protobufs.FloorProto.Floor> getFloorsList() {
      return floors_;
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    public java.util.List<? extends com.navatar.protobufs.FloorProto.FloorOrBuilder> 
        getFloorsOrBuilderList() {
      return floors_;
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    public int getFloorsCount() {
      return floors_.size();
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    public com.navatar.protobufs.FloorProto.Floor getFloors(int index) {
      return floors_.get(index);
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    public com.navatar.protobufs.FloorProto.FloorOrBuilder getFloorsOrBuilder(
        int index) {
      return floors_.get(index);
    }
    private void ensureFloorsIsMutable() {
      if (!floors_.isModifiable()) {
        floors_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(floors_);
       }
    }

    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void setFloors(
        int index, com.navatar.protobufs.FloorProto.Floor value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFloorsIsMutable();
      floors_.set(index, value);
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void setFloors(
        int index, com.navatar.protobufs.FloorProto.Floor.Builder builderForValue) {
      ensureFloorsIsMutable();
      floors_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void addFloors(com.navatar.protobufs.FloorProto.Floor value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFloorsIsMutable();
      floors_.add(value);
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void addFloors(
        int index, com.navatar.protobufs.FloorProto.Floor value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFloorsIsMutable();
      floors_.add(index, value);
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void addFloors(
        com.navatar.protobufs.FloorProto.Floor.Builder builderForValue) {
      ensureFloorsIsMutable();
      floors_.add(builderForValue.build());
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void addFloors(
        int index, com.navatar.protobufs.FloorProto.Floor.Builder builderForValue) {
      ensureFloorsIsMutable();
      floors_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void addAllFloors(
        java.lang.Iterable<? extends com.navatar.protobufs.FloorProto.Floor> values) {
      ensureFloorsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, floors_);
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void clearFloors() {
      floors_ = emptyProtobufList();
    }
    /**
     * <pre>
     * An array of the floors of this building. 
     * </pre>
     *
     * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
     */
    private void removeFloors(int index) {
      ensureFloorsIsMutable();
      floors_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getMinCoordinates());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getMaxCoordinates());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getName());
      }
      for (int i = 0; i < floors_.size(); i++) {
        output.writeMessage(4, floors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMinCoordinates());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxCoordinates());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName());
      }
      for (int i = 0; i < floors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, floors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.BuildingMapProto.BuildingMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.navatar.protobufs.BuildingMapProto.BuildingMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     * The protobuf definition for the BuildingMap class.
     * </pre>
     *
     * Protobuf type {@code com.navatar.protobufs.BuildingMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.navatar.protobufs.BuildingMapProto.BuildingMap, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.navatar.protobufs.BuildingMap)
        com.navatar.protobufs.BuildingMapProto.BuildingMapOrBuilder {
      // Construct using com.navatar.protobufs.BuildingMapProto.BuildingMap.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The map's minimum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
       */
      public boolean hasMinCoordinates() {
        return instance.hasMinCoordinates();
      }
      /**
       * <pre>
       * The map's minimum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
       */
      public com.navatar.protobufs.CoordinatesProto.Coordinates getMinCoordinates() {
        return instance.getMinCoordinates();
      }
      /**
       * <pre>
       * The map's minimum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
       */
      public Builder setMinCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.setMinCoordinates(value);
        return this;
        }
      /**
       * <pre>
       * The map's minimum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
       */
      public Builder setMinCoordinates(
          com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.setMinCoordinates(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The map's minimum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
       */
      public Builder mergeMinCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.mergeMinCoordinates(value);
        return this;
      }
      /**
       * <pre>
       * The map's minimum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates minCoordinates = 1;</code>
       */
      public Builder clearMinCoordinates() {  copyOnWrite();
        instance.clearMinCoordinates();
        return this;
      }

      /**
       * <pre>
       * The map's maximum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
       */
      public boolean hasMaxCoordinates() {
        return instance.hasMaxCoordinates();
      }
      /**
       * <pre>
       * The map's maximum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
       */
      public com.navatar.protobufs.CoordinatesProto.Coordinates getMaxCoordinates() {
        return instance.getMaxCoordinates();
      }
      /**
       * <pre>
       * The map's maximum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
       */
      public Builder setMaxCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.setMaxCoordinates(value);
        return this;
        }
      /**
       * <pre>
       * The map's maximum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
       */
      public Builder setMaxCoordinates(
          com.navatar.protobufs.CoordinatesProto.Coordinates.Builder builderForValue) {
        copyOnWrite();
        instance.setMaxCoordinates(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The map's maximum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
       */
      public Builder mergeMaxCoordinates(com.navatar.protobufs.CoordinatesProto.Coordinates value) {
        copyOnWrite();
        instance.mergeMaxCoordinates(value);
        return this;
      }
      /**
       * <pre>
       * The map's maximum coordinates. 
       * </pre>
       *
       * <code>optional .com.navatar.protobufs.Coordinates maxCoordinates = 2;</code>
       */
      public Builder clearMaxCoordinates() {  copyOnWrite();
        instance.clearMaxCoordinates();
        return this;
      }

      /**
       * <pre>
       * The building's name. 
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return instance.hasName();
      }
      /**
       * <pre>
       * The building's name. 
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       * The building's name. 
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       * The building's name. 
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       * The building's name. 
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       * The building's name. 
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public java.util.List<com.navatar.protobufs.FloorProto.Floor> getFloorsList() {
        return java.util.Collections.unmodifiableList(
            instance.getFloorsList());
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public int getFloorsCount() {
        return instance.getFloorsCount();
      }/**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public com.navatar.protobufs.FloorProto.Floor getFloors(int index) {
        return instance.getFloors(index);
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder setFloors(
          int index, com.navatar.protobufs.FloorProto.Floor value) {
        copyOnWrite();
        instance.setFloors(index, value);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder setFloors(
          int index, com.navatar.protobufs.FloorProto.Floor.Builder builderForValue) {
        copyOnWrite();
        instance.setFloors(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder addFloors(com.navatar.protobufs.FloorProto.Floor value) {
        copyOnWrite();
        instance.addFloors(value);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder addFloors(
          int index, com.navatar.protobufs.FloorProto.Floor value) {
        copyOnWrite();
        instance.addFloors(index, value);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder addFloors(
          com.navatar.protobufs.FloorProto.Floor.Builder builderForValue) {
        copyOnWrite();
        instance.addFloors(builderForValue);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder addFloors(
          int index, com.navatar.protobufs.FloorProto.Floor.Builder builderForValue) {
        copyOnWrite();
        instance.addFloors(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder addAllFloors(
          java.lang.Iterable<? extends com.navatar.protobufs.FloorProto.Floor> values) {
        copyOnWrite();
        instance.addAllFloors(values);
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder clearFloors() {
        copyOnWrite();
        instance.clearFloors();
        return this;
      }
      /**
       * <pre>
       * An array of the floors of this building. 
       * </pre>
       *
       * <code>repeated .com.navatar.protobufs.Floor floors = 4;</code>
       */
      public Builder removeFloors(int index) {
        copyOnWrite();
        instance.removeFloors(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.navatar.protobufs.BuildingMap)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.navatar.protobufs.BuildingMapProto.BuildingMap();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          floors_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.navatar.protobufs.BuildingMapProto.BuildingMap other = (com.navatar.protobufs.BuildingMapProto.BuildingMap) arg1;
          minCoordinates_ = visitor.visitMessage(minCoordinates_, other.minCoordinates_);
          maxCoordinates_ = visitor.visitMessage(maxCoordinates_, other.maxCoordinates_);
          name_ = visitor.visitString(
              hasName(), name_,
              other.hasName(), other.name_);
          floors_= visitor.visitList(floors_, other.floors_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.navatar.protobufs.CoordinatesProto.Coordinates.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = minCoordinates_.toBuilder();
                  }
                  minCoordinates_ = input.readMessage(com.navatar.protobufs.CoordinatesProto.Coordinates.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minCoordinates_);
                    minCoordinates_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  com.navatar.protobufs.CoordinatesProto.Coordinates.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = maxCoordinates_.toBuilder();
                  }
                  maxCoordinates_ = input.readMessage(com.navatar.protobufs.CoordinatesProto.Coordinates.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxCoordinates_);
                    maxCoordinates_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  name_ = s;
                  break;
                }
                case 34: {
                  if (!floors_.isModifiable()) {
                    floors_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(floors_);
                  }
                  floors_.add(
                      input.readMessage(com.navatar.protobufs.FloorProto.Floor.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.navatar.protobufs.BuildingMapProto.BuildingMap.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.navatar.protobufs.BuildingMap)
    private static final com.navatar.protobufs.BuildingMapProto.BuildingMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BuildingMap();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.navatar.protobufs.BuildingMapProto.BuildingMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BuildingMap> PARSER;

    public static com.google.protobuf.Parser<BuildingMap> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
