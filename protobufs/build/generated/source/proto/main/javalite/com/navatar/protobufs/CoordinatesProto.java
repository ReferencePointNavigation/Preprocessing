// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CoordinatesProto.proto

package com.navatar.protobufs;

public final class CoordinatesProto {
  private CoordinatesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface CoordinatesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.navatar.protobufs.Coordinates)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The x coordinate. 
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    boolean hasX();
    /**
     * <pre>
     * The x coordinate. 
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    double getX();

    /**
     * <pre>
     * The y coordinate. 
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    boolean hasY();
    /**
     * <pre>
     * The y coordinate. 
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    double getY();
  }
  /**
   * <pre>
   **
   * The protobuf for the Coordinates class used to define points in the map.
   * </pre>
   *
   * Protobuf type {@code com.navatar.protobufs.Coordinates}
   */
  public  static final class Coordinates extends
      com.google.protobuf.GeneratedMessageLite<
          Coordinates, Coordinates.Builder> implements
      // @@protoc_insertion_point(message_implements:com.navatar.protobufs.Coordinates)
      CoordinatesOrBuilder {
    private Coordinates() {
    }
    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <pre>
     * The x coordinate. 
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The x coordinate. 
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    public double getX() {
      return x_;
    }
    /**
     * <pre>
     * The x coordinate. 
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    private void setX(double value) {
      bitField0_ |= 0x00000001;
      x_ = value;
    }
    /**
     * <pre>
     * The x coordinate. 
     * </pre>
     *
     * <code>optional double x = 1;</code>
     */
    private void clearX() {
      bitField0_ = (bitField0_ & ~0x00000001);
      x_ = 0D;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <pre>
     * The y coordinate. 
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The y coordinate. 
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    public double getY() {
      return y_;
    }
    /**
     * <pre>
     * The y coordinate. 
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    private void setY(double value) {
      bitField0_ |= 0x00000002;
      y_ = value;
    }
    /**
     * <pre>
     * The y coordinate. 
     * </pre>
     *
     * <code>optional double y = 2;</code>
     */
    private void clearY() {
      bitField0_ = (bitField0_ & ~0x00000002);
      y_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, y_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.navatar.protobufs.CoordinatesProto.Coordinates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.navatar.protobufs.CoordinatesProto.Coordinates prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     * The protobuf for the Coordinates class used to define points in the map.
     * </pre>
     *
     * Protobuf type {@code com.navatar.protobufs.Coordinates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.navatar.protobufs.CoordinatesProto.Coordinates, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.navatar.protobufs.Coordinates)
        com.navatar.protobufs.CoordinatesProto.CoordinatesOrBuilder {
      // Construct using com.navatar.protobufs.CoordinatesProto.Coordinates.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The x coordinate. 
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public boolean hasX() {
        return instance.hasX();
      }
      /**
       * <pre>
       * The x coordinate. 
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public double getX() {
        return instance.getX();
      }
      /**
       * <pre>
       * The x coordinate. 
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public Builder setX(double value) {
        copyOnWrite();
        instance.setX(value);
        return this;
      }
      /**
       * <pre>
       * The x coordinate. 
       * </pre>
       *
       * <code>optional double x = 1;</code>
       */
      public Builder clearX() {
        copyOnWrite();
        instance.clearX();
        return this;
      }

      /**
       * <pre>
       * The y coordinate. 
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public boolean hasY() {
        return instance.hasY();
      }
      /**
       * <pre>
       * The y coordinate. 
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public double getY() {
        return instance.getY();
      }
      /**
       * <pre>
       * The y coordinate. 
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public Builder setY(double value) {
        copyOnWrite();
        instance.setY(value);
        return this;
      }
      /**
       * <pre>
       * The y coordinate. 
       * </pre>
       *
       * <code>optional double y = 2;</code>
       */
      public Builder clearY() {
        copyOnWrite();
        instance.clearY();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.navatar.protobufs.Coordinates)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.navatar.protobufs.CoordinatesProto.Coordinates();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.navatar.protobufs.CoordinatesProto.Coordinates other = (com.navatar.protobufs.CoordinatesProto.Coordinates) arg1;
          x_ = visitor.visitDouble(
              hasX(), x_,
              other.hasX(), other.x_);
          y_ = visitor.visitDouble(
              hasY(), y_,
              other.hasY(), other.y_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 9: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readDouble();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.navatar.protobufs.CoordinatesProto.Coordinates.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.navatar.protobufs.Coordinates)
    private static final com.navatar.protobufs.CoordinatesProto.Coordinates DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Coordinates();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.navatar.protobufs.CoordinatesProto.Coordinates getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Coordinates> PARSER;

    public static com.google.protobuf.Parser<Coordinates> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
